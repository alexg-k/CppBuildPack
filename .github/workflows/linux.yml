name: Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  artifactName: buildArtifact
  artifactPackage: CppBuildPack-x86_64.AppImage

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BuildType: [Debug, Release]
    steps:
      - name: Setup Build-Environment
        run: |
          sudo apt update
          sudo apt install gcc
      - uses: lukka/get-cmake@latest
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Configure
        run: cmake -S . -B build/${{ matrix.BuildType }} -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
      - name: Build
        run: cmake --build build/${{ matrix.BuildType }} --target all --config ${{matrix.BuildType}}
      - name: Package
        run: DESTDIR=AppDir/ cmake --build build/${{ matrix.BuildType }} --target install
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifactName }}-${{ matrix.BuildType }}
          path: ./build/${{ matrix.BuildType }}/

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifactName }}-Debug
          path: ./build/Debug/
      - name: Test
        if: matrix.BuildType == 'Debug'
        run: cd build/Debug && ctest

  release:
    needs: test
    if: needs.test.result == 'success' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifactName }}-Release
          path: ./build/Release/
      - name: Create Version Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/Release/${{ env.artifactPackage }}
      - name: Create Continuous Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/Release/${{ env.artifactPackage }}
          tag_name: continuous-build